// Generated by CoffeeScript 1.6.3
(function() {
  var Gcalendar, OAuth2Client, gapi;

  gapi = require('googleapis');

  OAuth2Client = gapi.OAuth2Client;

  Gcalendar = (function() {
    function Gcalendar(options) {
      var access_token, client_id, client_secret, redirect_uri, refresh_token, _ref;
      this.options = options != null ? options : {};
      _ref = this.options, client_id = _ref.client_id, client_secret = _ref.client_secret, redirect_uri = _ref.redirect_uri, access_token = _ref.access_token, refresh_token = _ref.refresh_token;
      this.auth = new OAuth2Client(client_id, client_secret, redirect_uri);
      if ((access_token != null) && (refresh_token != null)) {
        this.auth.credentials = {
          access_token: access_token,
          refresh_token: refresh_token
        };
      }
    }

    Gcalendar.prototype.client = function(callback) {
      if (callback == null) {
        callback = function() {};
      }
      return gapi.discover('calendar', 'v3').execute(callback);
    };

    Gcalendar.prototype.execute = function(req, callback) {
      if (callback == null) {
        callback = function() {};
      }
      return req.withAuthClient(this.auth).execute(callback);
    };

    Gcalendar.prototype.generateAuthUrl = function() {
      return this.auth.generateAuthUrl({
        access_type: 'offline',
        scope: 'https://www.googleapis.com/auth/calendar',
        approval_prompt: 'force'
      });
    };

    Gcalendar.prototype.getToken = function(code, callback) {
      if (callback == null) {
        callback = function() {};
      }
      return this.auth.getToken(code, callback);
    };

    return Gcalendar;

  })();

  module.exports = Gcalendar;

}).call(this);
